
pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: 'Release'

steps:
- task: GitVersion@4
  displayName: Git Version
  inputs:
    updateAssemblyInfo: false

- script: dotnet build --configuration $(buildConfiguration) -p:Version=$(GitVersion.NuGetVersionV2) -p:FileVersion=$(GitVersion.AssemblySemVer) -p:InformationalVersion=$(GitVersion.InformationalVersion)
  displayName: Build

- script: dotnet test --no-build --configuration $(buildConfiguration) --logger:trx
  displayName: Test

- task: PublishTestResults@2
  displayName: Publish Tests Results
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/*.trx'
    mergeTestResults: true
    testRunTitle: 'Unit tests'

- script: dotnet pack --no-build --configuration $(buildConfiguration) -p:Version=$(GitVersion.NuGetVersionV2) --output $(build.artifactStagingDirectory)
  displayName: Pack

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'

- task: NuGetToolInstaller@1
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq('true', variables['forcePushNuget'])))
  inputs:
    versionSpec: '>= 4.9'
    checkLatest: true

- task: NuGetCommand@2
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq('true', variables['forcePushNuget'])))
  inputs:
    command: 'push'
    packagesToPush: '$(build.artifactStagingDirectory)/**/*.nupkg;!$(build.artifactStagingDirectory)/**/*.snupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'nventive'
